# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# common anchors
x-isgx-volumes: &isgx-volumes
  volumes:
  - name: isgx
    host:
      path: /dev/isgx
  - name: aesmd
    host:
      path: /var/run/aesmd/aesm.socket

x-dcap-volumes: &dacp-volumes
  volumes:
  - name: sgx
    host:
      path: /dev/sgx
  - name: sgx_enclave
    host:
      path: /dev/sgx_enclave
  - name: sgx_provision
    host:
      path: /dev/sgx_provision
  - name: aesmd
    host:
      path: /var/run/aesmd/aesm.socket
  - name: aesmd-conf
    host:
      path: /etc/aesmd.conf
  - name: qcnl
    host:
      path: /etc/sgx_default_qcnl.conf

x-dcap-pipeline-volumes: &dcap-pipeline-volumes
  volumes:
  - name: sgx
    path: /dev/sgx
  - name: sgx_enclave
    path: /dev/sgx_enclave
  - name: sgx_provision
    path: /dev/sgx_provision
  - name: aesmd
    path: /var/run/aesmd/aesm.socket
  - name: aesmd-conf
    path: /etc/aesmd.conf
  - name: qcnl
    path: /etc/sgx_default_qcnl.conf

x-isgx-pipeline-volumes: &isgx-pipeline-volumes
  volumes:
  - name: isgx
    path: /dev/isgx
  - name: aesmd
    path: /var/run/aesmd/aesm.socket

x-isgx-image: &isgx-image
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3

x-dcap-image: &dcap-image
  image: teaclave/teaclave-build-ubuntu-1804-sgx-dcap-1.11:0.1.3

kind: pipeline
name: sgx-debug-ubuntu-1804

steps:
- name: prepare
  <<: *isgx-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - mkdir -p build
  - cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DTEST_MODE=ON ..
- name: check
  <<: *isgx-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make check
- name: compile
  <<: *isgx-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make VERBOSE=1 -j2
- name: tvm example
  <<: *isgx-image
  commands:
  - . ~/.cargo/env
  - cd examples/python/wasm_tvm_mnist_payload
  - make
- name: test
  <<: *isgx-image
  environment:
    AS_ALGO: sgx_epid
    AS_URL: https://api.trustedservices.intel.com:443
    AS_KEY:
      from_secret: V5_KEY
    AS_SPID:
      from_secret: V5_SPID
  privileged: true
  <<: *isgx-pipeline-volumes
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - (cd release/tool && ./teaclave_sgx_tool status)
  - (cd release/tool && ./teaclave_sgx_tool attestation --key $AS_KEY --spid $AS_SPID)
  - cd build && make run-tests

<<: *isgx-volumes

node:
  instance: mesatee-sgx

---

kind: pipeline
name: sgx-dcap-debug-ubuntu-1804

steps:
- name: prepare
  <<: *dcap-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - mkdir -p build
  - cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DTEST_MODE=ON -DDCAP=ON ..
- name: check
  <<: *dcap-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make check
- name: compile
  <<: *dcap-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - sed -i 's/ias_root_ca_cert/dcap_root_ca_cert/' config/build.config.toml
  - cd build && make VERBOSE=1 -j2
- name: tvm example
  <<: *dcap-image
  commands:
  - . ~/.cargo/env
  - cd examples/python/wasm_tvm_mnist_payload
  - make
- name: test
  <<: *dcap-image
  environment:
    AS_ALGO: sgx_ecdsa
    AS_URL: https://localhost:8080
    AS_KEY:
      from_secret: V5_KEY
    AS_SPID:
      from_secret: V5_SPID
  privileged: true
  <<: *dcap-pipeline-volumes
  commands:
  - echo "$(ip route | awk 'NR==1 {print $3}') pccs-server" >> /etc/hosts
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - (cd release/dcap && ./teaclave_dcap_ref_as &)
  - cd build && make run-tests

<<: *dcap-volumes

node:
  instance: mesatee-sgx-dcap

---

kind: pipeline
name: sgx-debug-ubuntu-2004

steps:
- name: prepare
  <<: *isgx-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - mkdir -p build
  - cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DTEST_MODE=ON ..
- name: check
  <<: *isgx-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make check
- name: compile
  <<: *isgx-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make VERBOSE=1 -j2
- name: tvm example
  <<: *isgx-image
  commands:
  - . ~/.cargo/env
  - cd examples/python/wasm_tvm_mnist_payload
  - make
- name: test
  <<: *isgx-image
  environment:
    AS_ALGO: sgx_epid
    AS_URL: https://api.trustedservices.intel.com:443
    AS_KEY:
      from_secret: V5_KEY
    AS_SPID:
      from_secret: V5_SPID
  privileged: true
  volumes:
  - name: isgx
    path: /dev/isgx
  - name: aesmd
    path: /var/run/aesmd/aesm.socket
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - (cd release/tool && ./teaclave_sgx_tool status)
  - (cd release/tool && ./teaclave_sgx_tool attestation --key $AS_KEY --spid $AS_SPID)
  - cd build && make run-tests

volumes:
- name: isgx
  host:
    path: /dev/isgx
- name: aesmd
  host:
    path: /var/run/aesmd/aesm.socket

node:
  instance: mesatee-sgx

---

kind: pipeline
name: sgx-dcap-debug-ubuntu-2004

steps:
- name: prepare
  <<: *dcap-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - mkdir -p build
  - cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DTEST_MODE=ON -DDCAP=ON ..
- name: check
  <<: *dcap-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make check
- name: compile
  <<: *dcap-image
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - sed -i 's/ias_root_ca_cert/dcap_root_ca_cert/' config/build.config.toml
  - cd build && make VERBOSE=1 -j2
- name: tvm example
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . ~/.cargo/env
  - cd examples/python/wasm_tvm_mnist_payload
  - make
- name: test
  <<: *dcap-image
  environment:
    AS_ALGO: sgx_ecdsa
    AS_URL: https://localhost:8080
    AS_KEY:
      from_secret: V5_KEY
    AS_SPID:
      from_secret: V5_SPID
  privileged: true
  <<: *dcap-pipeline-volumes
  commands:
  - echo "$(ip route | awk 'NR==1 {print $3}') pccs-server" >> /etc/hosts
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - (cd release/dcap && ./teaclave_dcap_ref_as &)
  - cd build && make run-tests

<<: *dcap-volumes

node:
  instance: mesatee-sgx-dcap

---

kind: pipeline
name: sgx-release-ubuntu-1804

steps:
- name: prepare
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - mkdir -p build
  - cd build && cmake -DCMAKE_BUILD_TYPE=Release -DTEST_MODE=OFF ..
- name: check
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make check
- name: compile
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make VERBOSE=1 -j2
- name: tvm example
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . ~/.cargo/env
  - cd examples/python/wasm_tvm_mnist_payload
  - make
- name: test
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  privileged: true
  environment:
    AS_ALGO: sgx_epid
    AS_URL: https://api.trustedservices.intel.com:443
    AS_KEY:
      from_secret: V5_KEY
    AS_SPID:
      from_secret: V5_SPID
  <<: *isgx-pipeline-volumes
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make run-examples

<<: *isgx-volumes

node:
  instance: mesatee-sgx

---

kind: pipeline
name: sim-debug-ubuntu-1804

steps:
- name: prepare
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - mkdir -p build
  - cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DSGX_SIM_MODE=ON -DTEST_MODE=ON ..
- name: check
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make check
- name: compile
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make VERBOSE=1 -j2
- name: tvm example
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . ~/.cargo/env
  - cd examples/python/wasm_tvm_mnist_payload
  - make
- name: test
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  environment:
    AS_ALGO: sgx_epid
    AS_URL: https://api.trustedservices.intel.com:443
    AS_KEY:
      from_secret: V5_KEY
    AS_SPID:
      from_secret: V5_SPID
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make run-tests

node:
  instance: mesatee-sgx

---

kind: pipeline
name: sim-release-ubuntu-1804

steps:
- name: prepare
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - mkdir -p build
  - cd build && cmake -DCMAKE_BUILD_TYPE=Release -DSGX_SIM_MODE=ON -DTEST_MODE=OFF ..
- name: check
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make check
- name: compile
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make VERBOSE=1 -j2
- name: tvm example
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . ~/.cargo/env
  - cd examples/python/wasm_tvm_mnist_payload
  - make
- name: test
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make run-examples

node:
  instance: mesatee-sgx

---

kind: pipeline
name: lint

steps:
- name: prepare
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - mkdir -p build
  - cd build && cmake -DRUSTFLAGS="-D warnings" -DTEST_MODE=ON ..
- name: check
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make check
- name: clippy
  image: teaclave/teaclave-build-ubuntu-1804-sgx-2.14:0.1.3
  commands:
  - . /root/.cargo/env
  - . /opt/sgxsdk/environment
  - cd build && make CLP=1

node:
  instance: mesatee-sgx

---

kind: pipeline
name: notification

steps:
- name: notify
  image: drillster/drone-email
  settings:
    username:
      from_secret: EMAIL_USERNAME
    password:
      from_secret: EMAIL_PASSWORD
    host:
      from_secret: EMAIL_HOST
    from:
      from_secret: EMAIL_FROM
    subject: >
      [{{ build.status }}]
      {{ repo.owner }}/{{ repo.name }}
      ({{ commit.branch }} - {{ truncate commit.sha 8 }})
  when:
    status:
      - failure
      - success

trigger:
  status:
    - failure
    - success
  cron:
    exclude:
      - hourly

depends_on:
  - sgx-debug-ubuntu-1804
  - sgx-dcap-debug-ubuntu-1804
  - sgx-debug-ubuntu-2004
  - sgx-dcap-debug-ubuntu-2004
  - sgx-release-ubuntu-1804
  - sim-debug-ubuntu-1804
  - sim-release-ubuntu-1804
  - lint

node:
  instance: mesatee-sgx
